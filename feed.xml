<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="https://usingprimavera.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://usingprimavera.com/" rel="alternate" type="text/html" /><updated>2022-04-04T20:57:13+01:00</updated><id>https://usingprimavera.com/feed.xml</id><title type="html">Using Primavera</title><subtitle>This site is about the work I undertake using Primavera P6, Primavera P6 EPPM,  Primavera Unifier, Primavera Gateway, Primavera Data Warehouse and Primavera Analytics.</subtitle><entry><title type="html">Run Oracle BI Publisher reports using REST</title><link href="https://usingprimavera.com/2022/04/04/run-oracle-bi-publisher-reports-using-rest/" rel="alternate" type="text/html" title="Run Oracle BI Publisher reports using REST" /><published>2022-04-04T20:44:32+01:00</published><updated>2022-04-04T20:56:35+01:00</updated><id>https://usingprimavera.com/2022/04/04/run-oracle-bi-publisher-reports-using-rest</id><content type="html" xml:base="https://usingprimavera.com/2022/04/04/run-oracle-bi-publisher-reports-using-rest/">&lt;p&gt;Recently we needed to run a series of Oracle BI Publisher reports to extract the data and store it in another system. We found the official &lt;a href=&quot;https://docs.oracle.com/middleware/bi12214/bip/BIPAP/index.html&quot;&gt;REST API for Oracle Business Intelligence Publisher&lt;/a&gt; to be incomplete in this respect.  We managed to hunt down the missing information, and decided to write a post showing what we did in an effort to help others who may be stuck in the same way we were.&lt;/p&gt;

&lt;p&gt;As the original post grew, we decided it would be better to write more than one post, and publish them at the same time.&lt;/p&gt;

&lt;p&gt;This is the first post in the series and starts by using the REST API directly from a Web Browser to retrieve information about a report.  Then we’ll do the same thing using Postman to ease you into how it works.  The next post in this short series uses Postman to run a report to return some data, before running reports that need parameters and how to retrieve the same report in different data formats.&lt;/p&gt;

&lt;p&gt;We used the free &lt;a href=&quot;https://www.postman.com/&quot;&gt;Postman&lt;/a&gt; application to find out what to do, and have also used that knowledge to implement the same thing using &lt;a href=&quot;https://www.microsoft.com/en-gb/p/power-bi-desktop/9ntxr16hnw1t?activetab=pivot:overviewtab&quot;&gt;PowerBI Desktop&lt;/a&gt; and the &lt;a href=&quot;https://docs.microsoft.com/en-us/powerquery-m/&quot;&gt;Power Query M formula language&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;the-state-of-the-documentation-for-the-rest-api-for-bi-publisher&quot;&gt;The state of the documentation for the REST API for BI Publisher&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/oracle_bip_docs_banner.png&quot; alt=&quot;BI Publisher Documentation Banner&quot; class=&quot;img-responsive&quot; /&gt;
REST is an acronym that stands for &lt;strong&gt;RE&lt;/strong&gt;presentational &lt;strong&gt;S&lt;/strong&gt;tate &lt;strong&gt;T&lt;/strong&gt;ransfer and is an architectural style that was first presented in 2000.  We’re not going to go into the depths of what exactly that means, but here are a few resources we have found useful, but please carry on with this article and come back to these and other resources later if you need or want to increase your knowledge:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codecademy.com/article/what-is-rest&quot;&gt;What is REST&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://restfulapi.net/&quot;&gt;REST API Tutorial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;Representational state transfer - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’ll try and introduce everything you need to know as we go along.  The documentation for the REST API for BI Publication has some essential information, but assumes you know REST and the &lt;a href=&quot;https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&quot;&gt;HTTP Protocol&lt;/a&gt;, so it is a good start.  Unfortunately, it lets itself down by some poor examples.  It does tell us where options can be provided, but doesn’t mention what those options are or how to format them.&lt;/p&gt;

&lt;p&gt;The state of the documentation is a case of close, but not complete.&lt;/p&gt;

&lt;h2 id=&quot;get-a-report-definition&quot;&gt;Get a report definition&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/get_report_definition_bip_docs.png&quot; alt=&quot;Get Report Definition&quot; /&gt;
Retrieving the report definition is the easiest thing to do, and can be done using just a web browser.  We entered &lt;code class=&quot;highlighter-rouge&quot;&gt;http://ple-2012-bi:9502/xmlpserver/services/rest/v1/reports/~barrie%2FBIPREST%2FPARAM_REPORT&lt;/code&gt; into a web browser.  It then asked us for some credentials for BI Publisher and returned the following in the web browser.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ESSJobName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ESSPackageName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;autoRun&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;cacheDocument&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;controledByExtApp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dataModelURL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/~weblogic/BIPREST/DATA_MODELS/PARAM_REPORT.xdm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;defaultOutputFormat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;defaultTemplateId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PARAM_REPORT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;diagnostics&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;listOfTemplateFormatsLabelValues&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;active&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;applyStyleTemplate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;listOfTemplateFormatLabelValue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;templateFormatLabel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;templateFormatValue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xml&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;templateFormatLabel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;CSV&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;templateFormatValue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}],&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;templateAvailableLocales&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en_US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;templateDefaultLocale&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en_US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;templateID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PARAM_REPORT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;templateType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xpt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;templateURL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PARAM_REPORT.xpt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;viewOnline&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}],&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;onLine&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;openLinkInNewWindow&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;parameterColumns&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;parameterNames&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;p6ScheduleObjectId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;reportDefnTitle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;reportName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PARAM_REPORT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;reportParameterNameValues&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;UIType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dataType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xsd:integer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;defaultValue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;38&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;fieldSize&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;15&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;label&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;P6 Internal Project Id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;multiValuesAllowed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;p6ScheduleObjectId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;refreshParamOnChange&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;selectAll&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;templateParam&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;useNullForAll&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}],&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;showControls&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;showReportLinks&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;templateIds&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PARAM_REPORT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It might not look very exciting, but it is a nice easy start, and doing it confirms you can use REST to reach your BI Publisher system.&lt;/p&gt;

&lt;p&gt;Let’s break that URL down.&lt;/p&gt;

&lt;h3 id=&quot;whats-in-a-url&quot;&gt;What’s in a URL?&lt;/h3&gt;
&lt;p&gt;The first part of the URL is &lt;code class=&quot;highlighter-rouge&quot;&gt;http://ple-2012-bi:9502/xmlpserver&lt;/code&gt; which would take us to the BI Publisher application if that was all we entered.  The next part is documented by Oracle in the &lt;a href=&quot;https://docs.oracle.com/middleware/bi12214/bip/BIPAP/op-v1-reports-reportpath-get.html&quot;&gt;Get Report Definition&lt;/a&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;/services/rest/v1/reports/{reportPath}&lt;/code&gt;.  This is the REST specific part of the whole URL.  The REST implementation on BI Publisher makes use of URLs in combination with parameters, payloads and different method types to carry out different requests.  They all follow the hostname and port fragment with &lt;code class=&quot;highlighter-rouge&quot;&gt;/xmlpserver/services/rest/v1/reports/&lt;/code&gt;.  Anything after this, such as &lt;code class=&quot;highlighter-rouge&quot;&gt;{reportPath}&lt;/code&gt; is specific to the request being made.&lt;/p&gt;

&lt;p&gt;The Oracle documentation for the Get Report Definition request says it uses the &lt;strong&gt;Get&lt;/strong&gt; method, which is the easiest to run by typing it in a browser, just like many other requests we make on a regular basis using our web browsers.  5 of the 14 endpoints in the BI Publisher REST service are Get requests.  It is almost a case of just typing each of them into your web browser to get something back.&lt;/p&gt;

&lt;p&gt;The last part of this Get Report Definition endpoint is the &lt;strong&gt;{reportPath}&lt;/strong&gt; parameter.  As it’s name suggests it is the path to the report, whose definition we are after, but it doesn’t look like it at first sight.  The path, as seen in BI Publsiher is &lt;code class=&quot;highlighter-rouge&quot;&gt;~barrie/BIPREST/PARAM_REPORT&lt;/code&gt;.  The Report is called &lt;strong&gt;PARAM_REPORT&lt;/strong&gt; and is in the &lt;strong&gt;BIPREST&lt;/strong&gt; folder inside the “My Folders” directory which is my username &lt;strong&gt;~barrie&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Parameters can’t contain certain characters that are used in a normal URL.  They have to be encoded by being replaced with something else.  A forward slash can’t be used so it is replaced by &lt;strong&gt;%2F&lt;/strong&gt;, and a space can’t be used so it is replaced by &lt;strong&gt;%20&lt;/strong&gt;.  There are others, but luckily most programming languages have a library that can URL-encode parameters.&lt;/p&gt;

&lt;p&gt;The documentation places a parameter name between curly braces, and it has to be replaced with a URL encoded version of the value of the parameter.  The 5 Get requests require the &lt;strong&gt;{reportPath}&lt;/strong&gt;, &lt;strong&gt;{templateId}&lt;/strong&gt; parameter or both.  In the report we use here, the &lt;strong&gt;{templateId}&lt;/strong&gt; is the same name as the report.&lt;/p&gt;

&lt;h3 id=&quot;get-these-with-just-your-web-browser&quot;&gt;Get these with just your web browser&lt;/h3&gt;
&lt;p&gt;I can enter any of the five Get requests into my browser to get something back.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Get Report Definition: /services/rest/v1/reports/{reportPath} as &lt;code class=&quot;highlighter-rouge&quot;&gt;http://ple-2012-bi:9502/xmlpserver/services/rest/v1/reports/~barrie%2FBIPREST%2FPARAM_REPORT&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Get Report Sample Data: /services/rest/v1/reports/{reportPath}/sampleData which downloads a file if the report has sample data as &lt;code class=&quot;highlighter-rouge&quot;&gt;http://ple-2012-bi:9502/xmlpserver/services/rest/v1/reports/~barrie%2FBIPREST%2FPARAM_REPORT/sampleData&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Get Report Template: /services/rest/v1/reports/{reportPath}/templates/{templateId} which downloads a file as &lt;code class=&quot;highlighter-rouge&quot;&gt;http://ple-2012-bi:9502/xmlpserver/services/rest/v1/reports/~barrie%2FBIPREST%2FPARAM_REPORT/templates/PARAM_REPORT&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Get Report Template Parameters: /services/rest/v1/reports/{reportPath}/templates/{templateId}/parameters as &lt;code class=&quot;highlighter-rouge&quot;&gt;http://ple-2012-bi:9502/xmlpserver/services/rest/v1/reports/~barrie%2FBIPREST%2FPARAM_REPORT/templates/PARAM_REPORT/parameters&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Get XDO Schema: /services/rest/v1/reports/{reportPath}/xdoSchema which downloads a file as &lt;code class=&quot;highlighter-rouge&quot;&gt;http://ple-2012-bi:9502/xmlpserver/services/rest/v1/reports/~barrie%2FBIPREST%2FPARAM_REPORT/xdoSchema&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;BI Publisher will ask for your credentials the first time, and so long as you don’t leave it too long, it will let you keep sending Get Requests.&lt;/p&gt;

&lt;p&gt;The truth is we don’t need to use any of these Get requests to just run a report, but we wanted to show the basics and then build up from there.&lt;/p&gt;

&lt;h2 id=&quot;a-little-help-from-postman&quot;&gt;A little help from Postman&lt;/h2&gt;
&lt;p&gt;In this part of the post we are going to use the free &lt;a href=&quot;https://www.postman.com/&quot;&gt;Postman&lt;/a&gt; application to implement the Get Report Definition, and continue using it for the rest of the post.  It is an application that can be used to build and test web services and get to see what is going on.  We’re going to use a small part of it’s capabilities to demonstrate how to use the BI Publisher REST API.  &lt;a href=&quot;https://www.soapui.org/&quot;&gt;SoapUI&lt;/a&gt; is another app with similar capabilities.  We use Postman because we found it easier to find out how to use it than we did with SoapUI.&lt;/p&gt;

&lt;p&gt;The first thing we did was &lt;a href=&quot;https://learning.postman.com/docs/getting-started/creating-the-first-collection/&quot;&gt;create a Collection&lt;/a&gt; in Postman which is a place to store the requests we will be making.  We gave the Collection a name and then setup Authorisation.  The Collection uses Basic Authorization.  Under the &lt;strong&gt;Authorization&lt;/strong&gt; Tab, we selected &lt;strong&gt;Basic Auth&lt;/strong&gt; from the &lt;strong&gt;Type&lt;/strong&gt; drop-down and then entered our credentials for BI Publisher in the &lt;strong&gt;Username&lt;/strong&gt; and &lt;strong&gt;Password&lt;/strong&gt; text boxes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/postman_create_collection_authorisation.png&quot; alt=&quot;Create Postman collection using Basic Authorization&quot; /&gt;
In addition to setting the Authorization Type, we setup the URL Encoded version of our path.  This is very simple to do with Postman.  We enter the path as we would normally see it, highlight what we have entered and select &lt;strong&gt;Encode URI Component&lt;/strong&gt; from the drop-down.  There is a &lt;strong&gt;Decode URI Component&lt;/strong&gt; to swap it back if we need to.&lt;/p&gt;

&lt;p&gt;We’re now ready to create a Get Report Definition request in Postman.&lt;/p&gt;

&lt;h2 id=&quot;the-get-request-for-the-report-definition&quot;&gt;The GET Request for the Report Definition&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://learning.postman.com/docs/getting-started/sending-the-first-request/&quot;&gt;Sending a Request&lt;/a&gt; is very easy with Postman.  Open a new Tab by clicking on the + button near the top of Postman.  The new tab defaults to a &lt;strong&gt;GET&lt;/strong&gt; request and it is possible to just type the full URL directly into the text box.  The &lt;strong&gt;{reportPath}&lt;/strong&gt; is a URL Encoded path, which is very easy for us to do as our path is &lt;code class=&quot;highlighter-rouge&quot;&gt;~barrie/BIPREST/PARAM_REPORT&lt;/code&gt;. Not all paths are this easy to convert, but Postman provides a helping hand.  We entered the full URL as &lt;code class=&quot;highlighter-rouge&quot;&gt;http://ple-2012-bi:9502/xmlpserver/services/rest/v1/reports/~barrie/BIPREST/PARAM_REPORT&lt;/code&gt;.  We then highlighted the part representing the path to the report, clicked the elipses next to the &lt;strong&gt;Set as variable&lt;/strong&gt; that pops up and selected &lt;strong&gt;Encode URI Component&lt;/strong&gt; from the drop-down.  There is also a &lt;strong&gt;Decode URI Component&lt;/strong&gt; to swap it back if needed.&lt;/p&gt;

&lt;p&gt;Our URL now looks like this: &lt;code class=&quot;highlighter-rouge&quot;&gt;http://ple-2012-bi:9502/xmlpserver/services/rest/v1/reports/~barrie%2FBIPREST%2FPARAM_REPORT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The Request has to be saved to our Collection, by selecting &lt;strong&gt;Save As&lt;/strong&gt; from the Save button drop-down.  Once this is done we moved to the &lt;code class=&quot;highlighter-rouge&quot;&gt;Authorization&lt;/code&gt; Tab of the Request and changed the Type to &lt;strong&gt;Basic Auth&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We then clicked the &lt;strong&gt;Send&lt;/strong&gt; button and the definition was returned to Postman.&lt;/p&gt;

&lt;p&gt;We are using hardly any of the functionality of Postman here, clicking around the various tabs will reveal a lot of information about the request being made and the responses returned.&lt;/p&gt;

&lt;h2 id=&quot;running-a-simple-report&quot;&gt;Running a simple report&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/bip_run_report_rest_endpoint.png&quot; alt=&quot;BI Publisher REST Documentation banner for Run Report&quot; class=&quot;img-responsive&quot; /&gt;
By a simple report we mean one that does not require any parameters.  Running reports makes use of the &lt;strong&gt;POST&lt;/strong&gt; method and we also have to send some information using a Multipart Form.&lt;/p&gt;

&lt;p&gt;The BI Publisher REST documentation to &lt;a href=&quot;https://docs.oracle.com/middleware/bi12214/bip/BIPAP/op-v1-reports-reportpath-run-post.html&quot;&gt;run a report&lt;/a&gt; specifies the format of the url as &lt;code class=&quot;highlighter-rouge&quot;&gt;/services/rest/v1/reports/{reportPath}/run&lt;/code&gt;, which just like the Get Report Definition request is what appears after the normal URL for BI Publisher.  The URL request is the same as for the Get Report Definition except it ends with &lt;code class=&quot;highlighter-rouge&quot;&gt;/run&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We went to Postman and opened a new tab by clicking on the + button.  We entered the URL by copying the Get report Definition URL into the text box and adding &lt;code class=&quot;highlighter-rouge&quot;&gt;/run&lt;/code&gt; to the end of it.  The Run Report request has to be a &lt;strong&gt;POST&lt;/strong&gt; method so we changed it from &lt;strong&gt;GET&lt;/strong&gt; to &lt;strong&gt;POST&lt;/strong&gt;.
The &lt;strong&gt;Content-Type&lt;/strong&gt; has to be &lt;strong&gt;multipart/form-data&lt;/strong&gt;. To set that up we went to the &lt;strong&gt;Headers&lt;/strong&gt; tab and entered &lt;strong&gt;Content-Type&lt;/strong&gt; as the &lt;strong&gt;Key&lt;/strong&gt; and &lt;strong&gt;multipart/form-data&lt;/strong&gt; as the &lt;strong&gt;Value&lt;/strong&gt;.  Both of these appeared as values to choose once we started typing.&lt;br /&gt;
&lt;img src=&quot;/assets/images/postman_bip_run_headers.png&quot; alt=&quot;Setting the Headers in Postman&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Run Report request needs to send a &lt;code class=&quot;highlighter-rouge&quot;&gt;ReportRequest&lt;/code&gt; as a part in the request which requires it being added to the body of the request.  This is sometimes called the Payload.  There are many attributes that can go in here but we are going to keep it very simple at first, and discuss some of them later.&lt;/p&gt;

&lt;p&gt;We switch to the &lt;strong&gt;body&lt;/strong&gt; tab where we need to click on the &lt;strong&gt;form-data&lt;/strong&gt; radio button before we can enter the ReportRequest which requires us to add the &lt;strong&gt;Key&lt;/strong&gt;, &lt;strong&gt;Value&lt;/strong&gt; and &lt;strong&gt;Content-Type&lt;/strong&gt;.  Postman doesn’t display the last of these by default so we have to include Content-Type by clicking the elipses on the headings row and ensuring &lt;strong&gt;Content Type&lt;/strong&gt; is selected, then we can enter the required values.  In our case &lt;code class=&quot;highlighter-rouge&quot;&gt;ReportRequest&lt;/code&gt; is typed into the &lt;strong&gt;Key&lt;/strong&gt; box, &lt;code class=&quot;highlighter-rouge&quot;&gt;{&quot;byPassCache&quot;:true}&lt;/code&gt; in the &lt;strong&gt;Value&lt;/strong&gt; box and &lt;code class=&quot;highlighter-rouge&quot;&gt;application/json&lt;/code&gt; into the &lt;strong&gt;Content Type&lt;/strong&gt; box.  The Value is in Json format so we have to specify the content as application/json.
&lt;img src=&quot;/assets/images/postman_bip_simple_reportrequest.png&quot; alt=&quot;Setting the values in the body for the multipart form&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Just as with the Report Definition, the last steps are to save the Request to our collection and set the Authorization, before clicking on the &lt;strong&gt;Send&lt;/strong&gt; button to get the report data.  The screenshot shows the data returned as CSV data.
&lt;img src=&quot;/assets/images/postman_bip_simple_csv_data.png&quot; alt=&quot;Contents of data returned as CSV&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Our simple report defaults to returning data as CSV, but it is also configured to return data as XML.  We can request the report is returned as XML by passing &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;attributeFormat&quot;:&quot;xml&quot;&lt;/code&gt; as part of the &lt;code class=&quot;highlighter-rouge&quot;&gt;ReportRequest&lt;/code&gt; so now the value of the ReportRequest is &lt;code class=&quot;highlighter-rouge&quot;&gt;{&quot;byPassCache&quot;:true, &quot;attributeFormat&quot;:&quot;xml&quot;}&lt;/code&gt;.  This time the data is returned in xml format when the Send button is clicked.
&lt;img src=&quot;/assets/images/postman_bip_simple_xml_data.png&quot; alt=&quot;Contents of data returned as XML&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are many options that can be passed, but they aren’t documented in the REST documentation.  They can be found in the SOAP Web Services documentation which is in the &lt;a href=&quot;https://docs.oracle.com/middleware/12213/bip/BIPDV/index.html&quot;&gt;Developer’s Guide for Oracle Business Intelligence Publisher&lt;/a&gt;.  We found them in the &lt;a href=&quot;https://docs.oracle.com/middleware/12213/bip/BIPDV/datatypes.htm#BIPDV209&quot;&gt;2.3.46 ReportRequest&lt;/a&gt; section.  If the report has not been configured to use an option found here, then requesting it won’t make a difference.  As an example, our report is not configured to return a PDF format so setting the attributeFormat to pdf results in an error being returned.&lt;/p&gt;

&lt;h2 id=&quot;requesting-a-report-with-a-parameter&quot;&gt;Requesting a report with a parameter&lt;/h2&gt;
&lt;p&gt;The report we have been using just returns some basic information about Activities in the database.  We have now changed the report to require a parameter for the internal P6 Project Id.  The report will now return only the P6 Activities for that specific P6 Project.&lt;/p&gt;

&lt;p&gt;The parameter is named &lt;code class=&quot;highlighter-rouge&quot;&gt;p_proj_id&lt;/code&gt; with a &lt;strong&gt;Data Type&lt;/strong&gt; of &lt;strong&gt;Integer&lt;/strong&gt; and a &lt;strong&gt;Parameter Type&lt;/strong&gt; of &lt;strong&gt;Text&lt;/strong&gt;.  This just means we can send it an integer value and so long as there is a P6 project with a proj_id of the value we send, then a record for each task will be returned.  If there is no project then BI Publisher will return an empty XML stream, that will look like this: &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;data_ds&amp;gt;&amp;lt;/data_ds&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The parameter is passed as another value in the &lt;code class=&quot;highlighter-rouge&quot;&gt;ReportRequest&lt;/code&gt;.  We need to send the value &lt;strong&gt;411&lt;/strong&gt; to the &lt;strong&gt;p_proj_id&lt;/strong&gt; parameter, so we need to add &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;parameterNameValues&quot;: { &quot;listOfParamNameValues&quot;: [{&quot;name&quot;: &quot;p_proj_id&quot;,&quot;values&quot;: &quot;411&quot;}]}&lt;/code&gt; into the ReportRequest.&lt;/p&gt;

&lt;p&gt;It is very difficult to work this out from the BI Publisher REST documentation, which seems to send us round and round in circles.  It is slightly less difficult to get it from the BI Publisher SOAP documentation.  Considering it is something that is very common, we think it needs adding as an example to the Run Report API.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; is the name of the BI Publisher, which in our case is &lt;code class=&quot;highlighter-rouge&quot;&gt;p_proj_id&lt;/code&gt;, and the &lt;code class=&quot;highlighter-rouge&quot;&gt;values&lt;/code&gt; is the value we wish to set.  To test this out we added the parameterNameValues structure to the end of the existing &lt;strong&gt;ReportRequest&lt;/strong&gt; string, separating it with a comma.  The full string now looks like this: &lt;code class=&quot;highlighter-rouge&quot;&gt;{&quot;byPassCache&quot;:true, &quot;attributeFormat&quot;:&quot;xml&quot;, &quot;parameterNameValues&quot;: { &quot;listOfParamNameValues&quot;: [{&quot;name&quot;: &quot;p_proj_id&quot;,&quot;values&quot;: &quot;411&quot;}]}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When we click the &lt;strong&gt;Send&lt;/strong&gt; button in Postman it now returns the tasks for the P6 Project with an internal P6 Project Id of 411.&lt;/p&gt;

&lt;p&gt;If we want to get the tasks for more than one P6 project, we can call the report for each project, but that seems a little cumbersome.  BI Publisher allows the parameter value to be a set of comma separated values.  We made the change to our report by selecting the option &lt;code class=&quot;highlighter-rouge&quot;&gt;Text field contains comma-separated values&lt;/code&gt; and then updated the WHERE statement from &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE proj_id = :p_proj_id&lt;/code&gt; to be &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE proj_id IN ():p_proj_id)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We clicked the &lt;strong&gt;Send&lt;/strong&gt; button in Postman to verify it still returns the tasks for a single project, which it did.  Now we decided to request the tasks for 3 different projects with project_id of 412, 413 &amp;amp; 414.  All we did was replace the parameter value of &lt;strong&gt;411&lt;/strong&gt; with &lt;strong&gt;412,413,414&lt;/strong&gt; so the full &lt;strong&gt;ReportRequest&lt;/strong&gt; is now set to: &lt;code class=&quot;highlighter-rouge&quot;&gt;{&quot;byPassCache&quot;:true, &quot;attributeFormat&quot;:&quot;xml&quot;, &quot;parameterNameValues&quot;: { &quot;listOfParamNameValues&quot;: [{&quot;name&quot;: &quot;p_proj_id&quot;,&quot;values&quot;: &quot;412,413,414&quot;}]}}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We clicked the &lt;strong&gt;Send&lt;/strong&gt; button and it returned the tasks from the project specified.&lt;/p&gt;

&lt;h2 id=&quot;what-next&quot;&gt;What next?&lt;/h2&gt;
&lt;p&gt;Anyone who has been struggling with working out how to run a BI Publisher report using the REST API, and then pass a parameter to retrieve data should be able to do that using the information in this post.  There is a lot more to try out and explore, such as passing more than one parameter, or retieving a list of values from BI Publisher and setting one or more of them them as parameters in the &lt;strong&gt;ReportRequest&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We plan to visit those topics in another post, and also show how we extracted the XML and put it in a database.&lt;/p&gt;</content><author><name>barrie</name></author><summary type="html">Recently we needed to run a series of Oracle BI Publisher reports to extract the data and store it in another system. We found the official REST API for Oracle Business Intelligence Publisher to be incomplete in this respect. We managed to hunt down the missing information, and decided to write a post showing what we did in an effort to help others who may be stuck in the same way we were.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://usingprimavera.com/assets/images/postman_running_bip_report.png" /><media:content medium="image" url="https://usingprimavera.com/assets/images/postman_running_bip_report.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Calendars in oracle Primavera P6</title><link href="https://usingprimavera.com/2016/09/21/calendars-in-oracle-primavera-p6/" rel="alternate" type="text/html" title="Calendars in oracle Primavera P6" /><published>2016-09-21T17:35:56+01:00</published><updated>2021-05-04T21:03:44+01:00</updated><id>https://usingprimavera.com/2016/09/21/calendars-in-oracle-primavera-p6</id><content type="html" xml:base="https://usingprimavera.com/2016/09/21/calendars-in-oracle-primavera-p6/"></content><author><name>barrie</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://usingprimavera.com/assets/images/calendar_1.png" /><media:content medium="image" url="https://usingprimavera.com/assets/images/calendar_1.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">How long is a Primavera P6 Day, Week, Month or Year?</title><link href="https://usingprimavera.com/2016/09/07/how-long-is-a-primavera-p6-day-week-month-or-year/" rel="alternate" type="text/html" title="How long is a Primavera P6 Day, Week, Month or Year?" /><published>2016-09-07T11:42:09+01:00</published><updated>2021-05-04T21:03:44+01:00</updated><id>https://usingprimavera.com/2016/09/07/how-long-is-a-primavera-p6-day-week-month-or-year</id><content type="html" xml:base="https://usingprimavera.com/2016/09/07/how-long-is-a-primavera-p6-day-week-month-or-year/"></content><author><name>barrie</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://usingprimavera.com/assets/images/we_found_time.png" /><media:content medium="image" url="https://usingprimavera.com/assets/images/we_found_time.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Create a New Project for Primavera P6 Newbie</title><link href="https://usingprimavera.com/2016/09/06/create-a-new-project-for-primavera-p6-newbie/" rel="alternate" type="text/html" title="Create a New Project for Primavera P6 Newbie" /><published>2016-09-06T14:18:33+01:00</published><updated>2021-05-04T21:03:44+01:00</updated><id>https://usingprimavera.com/2016/09/06/create-a-new-project-for-primavera-p6-newbie</id><content type="html" xml:base="https://usingprimavera.com/2016/09/06/create-a-new-project-for-primavera-p6-newbie/"></content><author><name>barrie</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://usingprimavera.com/assets/images/p6_pro_activity_view.png" /><media:content medium="image" url="https://usingprimavera.com/assets/images/p6_pro_activity_view.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">How To Load Activity Code Values Into P6 From Excel</title><link href="https://usingprimavera.com/2016/07/21/how-to-load-activity-code-values-into-p6-from-excel/" rel="alternate" type="text/html" title="How To Load Activity Code Values Into P6 From Excel" /><published>2016-07-21T15:08:25+01:00</published><updated>2021-05-04T21:03:44+01:00</updated><id>https://usingprimavera.com/2016/07/21/how-to-load-activity-code-values-into-p6-from-excel</id><content type="html" xml:base="https://usingprimavera.com/2016/07/21/how-to-load-activity-code-values-into-p6-from-excel/"></content><author><name>barrie</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://usingprimavera.com/assets/images/load_codes_using_excel.png" /><media:content medium="image" url="https://usingprimavera.com/assets/images/load_codes_using_excel.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Creating a P6 Java API Session</title><link href="https://usingprimavera.com/java-api/2015/11/08/create-a-p6-java-api-session/" rel="alternate" type="text/html" title="Creating a P6 Java API Session" /><published>2015-11-08T13:04:06+00:00</published><updated>2021-05-04T21:03:44+01:00</updated><id>https://usingprimavera.com/java-api/2015/11/08/create-a-p6-java-api-session</id><content type="html" xml:base="https://usingprimavera.com/java-api/2015/11/08/create-a-p6-java-api-session/">&lt;p&gt;First of all, before starting to write any code, one has to install the Oracle Primavera P6 Integration API. The official &lt;a href=&quot;https://docs.oracle.com/en/industries/construction-engineering/primavera-p6-eppm/index.html&quot;&gt;Oracle Primavera P6 Documentation&lt;/a&gt; will tell you how to do that. Having installed the P6 Integration API, the next step for any would be P6 programmer is to write code that will login to a P6 Java API Session so they can work their developer magic on P6.&lt;/p&gt;

&lt;p&gt;No matter what else goes on in any application using the P6 Java API, they all have to create a session and log in, therefore, the class shown in this post should be useful. The P6 Java API can be run in local mode, where all the work is done on the same machine as the application, or it can be run in the remote mode where a web server does the heavy lifting and the application tells it what to do and gets the results back.&lt;/p&gt;

&lt;p&gt;In this article, I’ll share the class I use to get logged in to Primavera P6 in either mode and consequently get started fairly quickly in any environment. It’s more of a helper class than anything else and as a result saves writing the same kind of code over and over again. The full code listing is at the end of this article, but first of all, I wanted to spend a little time just walking through it.&lt;/p&gt;

&lt;h2 id=&quot;all-those-imports&quot;&gt;All those Imports&lt;/h2&gt;
&lt;p&gt;The class is called &lt;strong&gt;PrimaveraP6&lt;/strong&gt; to distinguish it from other Primavera tools such as Unifier where I would call the equivalent class &lt;strong&gt;PrimaveraUnifier&lt;/strong&gt;. The class definition starts off with all the imports that are needed to create a P6 Java API session. Anyone new to programming with the Oracle Primavera P6 Java API will soon learn there are a lot of imports required to do some simple things.&lt;/p&gt;

&lt;p&gt;In the case of &lt;strong&gt;PrimaveraP6&lt;/strong&gt;, the &lt;strong&gt;Session&lt;/strong&gt; and &lt;strong&gt;RMIURL&lt;/strong&gt; classes are used to login and there are three exception classes that can be thrown by the login method. In fact nearly every Primavera P6 class seems to throw &lt;strong&gt;com.primavera.ServerException&lt;/strong&gt;, &lt;strong&gt;com.primavera.integration.client.ClientExceptiPrimaveraon&lt;/strong&gt; and &lt;strong&gt;com.primavera.integration.network.NetworkException&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;There are two final imports as I make use of the Java logging classes. So here are all the imports used.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.primavera.integration.client.Session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.primavera.integration.client.RMIURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.primavera.ServerException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.primavera.integration.client.ClientException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.primavera.integration.network.NetworkException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.logging.Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.logging.Level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The way the class is instantiated defines whether it will attempt to use the Remote or Local mode of the P6 Java API session. There are 3 constructors. The first has no parameters and is for the Local mode. The other two are for Remote mode, where one requires both the hostname and port, whilst the other requires the hostname and uses the default port of 9099. These constructors set some private members that are the most common configuration.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Manages&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;login&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Primavera&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;P6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;over&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;either&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remote&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;This&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;around&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;It&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;adds&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;some&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;constructors&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simplify&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handling&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connecting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;via&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remote&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@author&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Barrie&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Callender&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PrimaveraP6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.usingp6.api.client.PrimaveraP6&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_rmiport&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9099&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_httpport&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RMIURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LOCAL_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
* Constructor for local mode only.
*
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PrimaveraP6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
* Constructor for remote where the hostname and port is supplied.
* The default mode is `STANDARD_RMI_SERVICE` and other modes will
* have to be set separately.
*
* @param url RMI registry host
* @param port RMI registry port number
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PrimaveraP6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rmiport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_rmiport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rmiport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RMIURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;STANDARD_RMI_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_url={0}, _rmiport={1},_mode={2}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_rmiport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
* Constructor for remote where only the hostname is supplied. The port
* defaults to 9099 and the mode is `STANDARD_RMI_SERVICE`.
* Other modes will have to be set separately.
*
* @param url RMI registry host
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PrimaveraP6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9099&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;setting-the-right-protocols&quot;&gt;Setting the right protocols&lt;/h2&gt;
&lt;p&gt;Once the &lt;code class=&quot;highlighter-rouge&quot;&gt;PrimaveraP6&lt;/code&gt; class has been instantiated there are various methods to make changes like using SSL. There aren’t a load of constructors to handle all these scenarios as most clients don’t use SSL or HTTP tunnelling and I like simple classes that set the most common settings by default.&lt;/p&gt;

&lt;p&gt;The reason most clients do not use SSL with Primavera P6 appears to be because there are so few people who know how to set it up. Most forget to configure the database to use SSL. Maybe a post for another day.&lt;/p&gt;

&lt;p&gt;There is a method (&lt;code class=&quot;highlighter-rouge&quot;&gt;setSSL&lt;/code&gt;) to set the Remote mode to use SSL and another method (&lt;code class=&quot;highlighter-rouge&quot;&gt;setStandard&lt;/code&gt;) to not use SSL. There’s even a method (&lt;code class=&quot;highlighter-rouge&quot;&gt;isSSL&lt;/code&gt;) which reports if SSL is configured to be used or not.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/**
* Set Remote Mode to use SSL.
*
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setSSL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RMIURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SSL_RMI_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_mode={0}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
* Set Remote mode to use standard protocol and not SSL.
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setStandard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RMIURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;STANDARD_RMI_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_mode={0}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/**
* Returns true if SSL is being used in Remote Mode otherwise returns false;
* @return true if SSL is being used
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isSSL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RMIURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SSL_RMI_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In a similar fashion the &lt;code class=&quot;highlighter-rouge&quot;&gt;setHTTPPort&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;unsetHTTPPort&lt;/code&gt; methods are used to set up or remove the configuration for HTTP tunnelling. (N.B. I have never used this and so it hasn’t been tested).&lt;/p&gt;

&lt;h2 id=&quot;login-to-primavera-p6&quot;&gt;Login to Primavera P6&lt;/h2&gt;
&lt;p&gt;Finally the &lt;code class=&quot;highlighter-rouge&quot;&gt;login&lt;/code&gt; method, which just calls &lt;code class=&quot;highlighter-rouge&quot;&gt;login&lt;/code&gt; on the &lt;code class=&quot;highlighter-rouge&quot;&gt;Session&lt;/code&gt; P6 Java API class. It returns an instance of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Session&lt;/code&gt; class which we can then use in our application. Typically I would use the class as in the following example, although the strings wouldn’t be hard-coded:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nc&quot;&gt;PrimaveraP6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;localP6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PrimaveraP6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;localP6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;admin&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;PrimaveraP6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remoteP6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PrimaveraP6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myp6remoteserver&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;localP6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;admin&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The class is pretty simple but can save a lot of time when trying to log in. It really deals with the more awkward aspects of setting up a connection. Using it means that it is very easy to create applications that can be configured at runtime to use either a Remote or a Local connection.&lt;/p&gt;

&lt;p&gt;Here is a complete class and may your application development with the P6 Java API be a happy one.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.usingp6.api.client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.primavera.integration.client.Session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.primavera.integration.client.RMIURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.primavera.ServerException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.primavera.integration.client.ClientException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.primavera.integration.network.NetworkException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.logging.Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.logging.Level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
* Manages the login to Primavera P6 over either remote or local mode. This
* class is a wrapper around the `Session` class. It adds some
* constructors to simplify handling connecting via local or remote mode.
*
* @author Barrie Callender
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PrimaveraP6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.usingp6.api.client.PrimaveraP6&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_rmiport&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9099&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_httpport&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RMIURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LOCAL_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
* Constructor for local mode only.
*
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PrimaveraP6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
* Constructor for remote where the hostname and port is supplied.
* The default mode is `STANDARD_RMI_SERVICE` and other modes will
* have to be set separately.
*
* @param url RMI registry host
* @param port RMI registry port number
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PrimaveraP6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rmiport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_rmiport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rmiport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RMIURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;STANDARD_RMI_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_url={0}, _rmiport={1},_mode={2}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_rmiport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
* Constructor for remote where only the hostname is supplied. The port
* defaults to 9099 and the mode is `STANDARD_RMI_SERVICE`.
* Other modes will have to be set separately.
*
* @param url RMI registry host
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PrimaveraP6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9099&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
* Set Remote Mode to use SSL.
*
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setSSL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RMIURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SSL_RMI_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_mode={0}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
* Set Remote mode to use standard protocol and not SSL.
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setStandard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RMIURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;STANDARD_RMI_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_mode={0}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/**
* Returns true if SSL is being used in Remote Mode otherwise returns false;
* @return true if SSL is being used
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isSSL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RMIURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SSL_RMI_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
* Sets the Remote Mode to use http tunnelling and supplies a port to use
*
* @param httpport - the HTTP port number which is used for HTTP/HTTPS tunneling mode only
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setHTTPPort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_httpport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;httpport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_httpport={0}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_httpport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
* Sets the Remode Mode to use http tunnelling with the default port set to 80
*
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setHTTPPort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;setHTTPPort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
* Switches off HTTP Tunnelling by setting the port to 0
*
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;unsetHTTPPort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;setHTTPPort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
* Used to login to P6 by passing the UserName, Password and Database Instance
* Id. The constructor used to instantiate this class defines whether to
* connect via local or remote modes.
*
* Additional methods are provided to request the different remote modes and
* they should be called before this method.
*
* @param username - P6 User Name
* @param password - P6 Password
* @param databaseId - Database Id from list available
* @return Session session object
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;databaseId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;username={0},password={1},database id={2}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;databaseId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_mode={0},_url={1},_rmiport={2},_httpport={3}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_rmiport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_httpport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RMIURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRmiUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_rmiport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_httpport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;databaseId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ServerException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ClientException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;NetworkException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>barrie</name></author><category term="java-api" /><summary type="html">First of all, before starting to write any code, one has to install the Oracle Primavera P6 Integration API. The official Oracle Primavera P6 Documentation will tell you how to do that. Having installed the P6 Integration API, the next step for any would be P6 programmer is to write code that will login to a P6 Java API Session so they can work their developer magic on P6.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://usingprimavera.com/assets/images/p6_create-java-session400.png" /><media:content medium="image" url="https://usingprimavera.com/assets/images/p6_create-java-session400.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>